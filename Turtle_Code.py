#Imports turtle module so that code can function as intended.
import turtle as trtl
import random

painter = trtl.Turtle()
# (Mostly) recreates the house from the drawing
def house():
    painter.begin_fill()
    painter.fillcolor("orange")
    turn_number = 0
    painter.forward(200)
    painter.right(90)
    painter.forward(400)
    turn_number +=1
    painter.right(90)
    painter.forward(300)
    door_turns = 0
    painter.forward(100)
    turn_number = 0
    while turn_number < 2:
        painter.right(90)
        painter.forward(400)
        turn_number +=1
    painter.end_fill()
    painter.begin_fill()
    painter.fillcolor("brown")
    painter.goto(0, 210)
    painter.goto(-200, 0)
    painter.end_fill()
    painter.begin_fill()
    painter.fillcolor("brown")
    painter.penup()
    painter.hideturtle()
    painter.begin_fill()
    painter.goto(100, -200)
    painter.showturtle()
    painter.pendown()  
    while door_turns < 4:
        painter.right(90)
        painter.forward(200)
        door_turns += 1
    painter.end_fill()
    painter.penup()
    painter.hideturtle()
    painter.begin_fill()
    painter.fillcolor("black")
    painter.goto(-150, 50)
    painter.showturtle()
    painter.pendown() 
    painter.forward(300)
    painter.penup()
    painter.hideturtle()
    painter.begin_fill()
    painter.goto(-50, 150)
    painter.showturtle()
    painter.pendown() 
    painter.forward(100)
    painter.begin_fill()
    painter.penup()
    painter.hideturtle()
    painter.fillcolor("yellow")
    painter.goto(75, -325)
    painter.showturtle()
    painter.pendown()   
    painter.circle(25)
    painter.end_fill()
    painter.penup()
    painter.hideturtle()
# Recreates the father, mother, and daughter in the drawing
def family(member_name):
    painter.begin_fill()
    painter.fillcolor("beige")
    #If the member_name parameter is equal to "Dad" or "Mom", a larger and taller stick figure will be created by the program.
    if member_name == "Dad" or member_name == "Mom":
        painter.circle(50)
        painter.end_fill()
        painter.right(90)
        painter.forward(75)
        painter.right(90)
        painter.forward(50)
        painter.right(180)
        painter.forward(100)
        painter.right(180)
        painter.forward(50)
        painter.right(-90)
        painter.forward(75)
        painter.goto(painter.xcor() - 50, painter.ycor() - 100)
        painter.goto(painter.xcor() + 50, painter.ycor() + 100)
        painter.goto(painter.xcor() + 50, painter.ycor() - 100)
    #If the member_name parameter is equal to "Daughter", a smaller and shorter stick figure will be created by the program.
    elif member_name == "Daughter":
        painter.circle(40)
        painter.end_fill()
        painter.right(90)
        painter.forward(50)
        painter.right(90)
        painter.forward(50)
        painter.right(180)
        painter.forward(100)
        painter.right(180)
        painter.forward(50)
        painter.right(-90)
        painter.forward(75)
        painter.goto(painter.xcor() - 50, painter.ycor() - 75)
        painter.goto(painter.xcor() + 50, painter.ycor() + 75)
        painter.goto(painter.xcor() + 50, painter.ycor() - 75)
#Creates the bows on the mother and daughter. A function with parameters for the coordinates one wants to move to in order to create the bow saves time.
def bow(x, y):
    painter.penup()
    painter.hideturtle()
    painter.begin_fill()
    painter.fillcolor("pink")
    painter.goto(x, y)
    painter.showturtle()
    painter.pendown()  
    painter.goto((x-50), (y+50)) 
    painter.forward(50)
    painter.goto(x, y) 
    painter.end_fill()
    painter.begin_fill()
    painter.goto((x+50), (y+50)) 
    painter.forward(50)
    painter.goto(x, y) 
    painter.end_fill()
    painter.begin_fill()
    painter.penup()
    painter.hideturtle()
    painter.goto((x-10), y)
    painter.circle(10)
    painter.end_fill()
#Recreates the mustang in the drawing without the extra details on the mane and tail
def mustang():
    painter.begin_fill()
    painter.fillcolor("brown")
    painter.circle(75)
    painter.penup()
    painter.hideturtle()
    painter.goto(-450, -175)
    painter.right(90)
    painter.showturtle()
    painter.pendown()
    painter.forward(200)
    painter.right(-90)
    painter.forward(50)
    painter.right(-90)
    painter.forward(100)
    painter.right(180)
    painter.forward(100)
    painter.right(-90)
    painter.forward(50)
    painter.right(-90)
    painter.forward(100)
    painter.right(90)
    painter.forward(50)
    painter.right(90)
    painter.forward(100)
    painter.right(-90)
    painter.forward(50)
    painter.right(-90)
    painter.forward(200)
    painter.right(-90)
    painter.forward(100)
    painter.end_fill()
    painter.begin_fill()
    painter.penup()
    painter.hideturtle()
    painter.goto(-465.5, -75)
    painter.right(90)
    painter.showturtle()
    painter.pendown()
    painter.goto(-440, -25)
    painter.right(180)
    painter.goto(-400, -75)
    painter.end_fill()
    painter.begin_fill()
    painter.penup()
    painter.hideturtle()
    painter.goto(-395, -75)
    painter.right(90)
    painter.showturtle()
    painter.pendown()
    painter.goto(-365, -25)
    painter.right(180)
    painter.goto(-340, -75)
    painter.end_fill()
    painter.begin_fill()
    painter.fillcolor("black")
    painter.penup()
    painter.hideturtle()
    painter.goto(-250, -150)
    painter.begin_fill()
    painter.fillcolor("black")
    painter.showturtle()
    painter.pendown()
    turn_number = 0
    while turn_number < 2:
        painter.right(90)
        painter.forward(30)
        painter.right(90)
        painter.forward(75)
        turn_number += 1
    painter.end_fill()
    painter.penup()
    painter.hideturtle()
    painter.goto(-250, -175)
    painter.begin_fill()
    painter.fillcolor("brown")
    painter.showturtle()
    painter.pendown()
    painter.right(-90)
    turn_number = 0
    while turn_number < 2:
        painter.right(90)
        painter.forward(25)
        painter.right(90)
        painter.forward(150)
        turn_number += 1
    painter.end_fill()
    painter.right(180)
    painter.forward(150)
    painter.begin_fill()
    painter.fillcolor("black")
    painter.circle(25)
    painter.end_fill()
    painter.penup()
    painter.hideturtle()
    painter.begin_fill()
    painter.goto(-462.5, -150)
    painter.showturtle()
    painter.pendown() 
    painter.circle(15)
    painter.end_fill()
    painter.penup()
    painter.hideturtle()
    painter.begin_fill()
    painter.goto(-387.5, -150)
    painter.showturtle()
    painter.pendown() 
    painter.circle(15)
    painter.end_fill()
    painter.penup()
    painter.hideturtle()
    painter.begin_fill()
    painter.pencolor("brown")
    painter.fillcolor("brown")
    painter.goto(-345, -170)
    painter.showturtle()
    painter.pendown() 
    turn_count = 0
    while turn_count < 4:
        painter.forward(105)
        painter.right(90)
        turn_count += 1
    painter.end_fill()
    painter.begin_fill()
    painter.pencolor("black")
    painter.fillcolor("maroon")
    painter.penup()
    painter.hideturtle()
    painter.goto(-337.5, -275) 
    painter.pendown()
    painter.showturtle()
    painter.forward(100)
    painter.left(90)
    painter.forward(50)
    painter.left(90)
    painter.forward(100)
    painter.left(90)
    painter.forward(50)
    painter.end_fill()
    painter.pencolor("black")
    painter.penup()
    painter.hideturtle()
    painter.goto(-325, -112.5) 
    painter.right(90)
    painter.pendown()
    painter.showturtle()
    painter.begin_fill()
    painter.fillcolor("black")
    painter.circle(75, 180)
    painter.left(90)
    painter.forward(75)
    painter.end_fill()
    painter.begin_fill()
    painter.penup()
    painter.hideturtle()
    painter.goto(-325, -150) 
    painter.right(90)
    painter.pendown()
    painter.goto(-340, -180)
    painter.goto(-325, -180) 
    painter.goto(-325, -150)
    painter.end_fill()
    painter.pencolor("black")
    painter.penup()
    painter.hideturtle()
    painter.goto(-425, -165) 
    painter.pendown()
    painter.showturtle()
    painter.goto(-415, -175) 
    painter.penup()
    painter.hideturtle()
    painter.goto(-405, -175) 
    painter.pendown()
    painter.showturtle()
    painter.goto(-395, -165) 
#Recreates the extra details of the front of the mustang's mane from the drawing. A function with x and y coordinates for where one wants each separate "strand" of hair on the mustang's front mane to be was created to condense the code.
def hair(x, y):
    painter.begin_fill()
    painter.penup()
    painter.hideturtle()
    painter.goto(x, y) 
    painter.pendown()
    painter.goto((x - 25), (y - 15)) 
    painter.goto((x - 50), y) 
    painter.goto(x, y) 
    painter.end_fill()
#Recreates the extra details of the side of the mustang's mane from the drawing. A function with x and y coordinates for where one wants each separate "strand" of hair on the mustang's side mane to be was created to condense the code.
def frills(x, y):
    painter.begin_fill()
    painter.penup()
    painter.hideturtle()
    painter.goto(x, y) 
    painter.pendown()
    painter.goto((x + 12.5), (y + 10)) 
    painter.goto((x + 25), y) 
    painter.goto(x, y) 
    painter.end_fill()
#Recreates the sun from the drawing
def sun():
    painter.penup()
    painter.hideturtle()
    painter.goto(275, 200)
    painter.begin_fill()
    painter.fillcolor("light yellow")
    painter.showturtle()
    painter.pendown()
    painter.circle(125)
    painter.end_fill()
    painter.penup()
    painter.hideturtle()
    painter.goto(300, 200)
    painter.begin_fill()
    painter.fillcolor("yellow")
    painter.showturtle()
    painter.pendown()
    painter.circle(100)
    painter.end_fill()
#Recreates the windows on the house from the drawing
def window():
    painter.begin_fill()
    painter.fillcolor("white")
    painter.showturtle()
    painter.pendown()
    turn_number = 0
    while turn_number < 4:
        painter.forward(100)
        painter.left(90)
        turn_number += 1
    painter.end_fill()
#Recreates the extra details of the mustang's tail from the drawing. A function with x and y coordinates for where one wants each separate "strand" of hair on the mustang's tail to be was created to condense the code.
def tail_end(x, y):
    painter.begin_fill()
    painter.penup()
    painter.hideturtle()
    painter.goto(x, y) 
    painter.pendown()
    painter.showturtle()
    painter.circle(15)
    painter.end_fill()
#Creates a more colorful background in the drawing
trtl.bgcolor("skyblue")
#Makes the program's speed of recreating the drawing faster
painter.speed(20)
#Calls for the drawing of the house
house()
#Allows pen to move without being shown or drawing visible and unwanted lines on the recreated drawing.
painter.penup()
painter.hideturtle()
painter.goto(300, -150)
painter.showturtle()
painter.pendown()
#Calls for the drawing of the "Dad"
family("Dad")
painter.penup()
painter.hideturtle()
painter.goto(450, -150)
painter.right(-90)
painter.showturtle()
painter.pendown()
#Calls for the drawing of the "Mom"
family("Mom")
painter.penup()
painter.hideturtle()
painter.goto(375, -200)
painter.right(-90)
painter.showturtle()
painter.pendown()
#Calls for the drawing of the "Daughter"
family("Daughter")
painter.penup()
painter.hideturtle()
painter.goto(-400, -200)
painter.right(-90)
painter.showturtle()
painter.pendown()
#Calls for the drawing of the mustang
mustang()
#Calls for the drawing of the sun
sun()
painter.penup()
painter.hideturtle()
painter.goto(75, -50)
#Calls for the drawing of one of the two windows
window()
painter.penup()
painter.hideturtle()
painter.goto(-175, -50)
window()
#Draws the lines in the windows that are present in the original drawing
painter.penup()
painter.hideturtle()
painter.fillcolor("black")
painter.goto(-125, -50)
painter.showturtle()
painter.pendown()   
painter.forward(100)
painter.penup()
painter.hideturtle()
painter.fillcolor("black")
painter.goto(125, -50)
painter.showturtle()
painter.pendown()   
painter.forward(100)
painter.penup()
painter.hideturtle()
painter.fillcolor("black")
painter.goto(75, -100)
painter.left(90)
painter.showturtle()
painter.pendown()   
painter.forward(100)
painter.penup()
painter.hideturtle()
painter.fillcolor("black")
painter.goto(-175, -100)
painter.showturtle()
painter.pendown()   
painter.forward(100)
painter.fillcolor("black")
#Draws the top hat from the original drawing on top of the head of the dad
painter.penup()
painter.hideturtle()
painter.goto(350, -50)
painter.left(180)
painter.showturtle()
painter.pendown()   
painter.forward(100)
painter.begin_fill()
painter.penup()
painter.hideturtle()
painter.fillcolor("black")
painter.goto(337.5, 0)
painter.left(90)
painter.showturtle()
painter.pendown()   
turn_count = 0
while turn_count < 2:
    painter.forward(50)
    painter.right(90)
    painter.forward(75)
    painter.right(90)
    turn_count += 1
painter.end_fill()
#Calls for the drawing of a bow on top of the mom and daughter's heads
bow(450, -50)
bow(375, -125)
#Recreates the black bow tie on the dad's neck in the original drawing.
painter.penup()
painter.hideturtle()
painter.begin_fill()
painter.fillcolor("black")
painter.goto(300, -175)
painter.showturtle()
painter.pendown()  
painter.goto(265, -150) 
painter.forward(35)
painter.goto(300, -175) 
painter.end_fill()
painter.begin_fill()
painter.goto(335, -150) 
painter.forward(35)
painter.goto(300, -175) 
painter.end_fill()
painter.begin_fill()
painter.penup()
painter.hideturtle()
painter.goto(290, -175)
painter.circle(10)
painter.end_fill()
#Adds the extra details present in the original drawing to the mustang's mane and tail
hair(-425, -112.5)
hair(-375, -112.5)
hair(-325, -112.5)
frills(-275, -150)
frills(-300, -150)
frills(-325, -150)
tail_end(-250, -335)
tail_end(-230, -340)
#Terminates drawing
trtl.done()
